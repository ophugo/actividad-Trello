{"ast":null,"code":"import _slicedToArray from\"/Users/ophugo/Downloads/clone_trello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{Typography,InputBase}from'@material-ui/core';import{makeStyles}from'@material-ui/core/styles';import MoreHorizIcon from'@material-ui/icons/MoreHoriz';import storeApi from'../../utils/storeApi';var useStyle=makeStyles(function(theme){return{editableTitleContainer:{margin:theme.spacing(1),display:'flex'},editableTitle:{flexGrow:1,fontSize:'1.2rem',fontWeight:'bold'},input:{fontSize:'1.2rem',fontWeight:'bold',margin:theme.spacing(1),'&:focus':{background:'#ddd'}}};});export default function Title(_ref){var title=_ref.title,listId=_ref.listId;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(title),_useState4=_slicedToArray(_useState3,2),newTitle=_useState4[0],setNewTitle=_useState4[1];var _useContext=useContext(storeApi),updateListTitle=_useContext.updateListTitle;var classes=useStyle();var handleOnChange=function handleOnChange(e){setNewTitle(e.target.value);};var handleOnBlur=function handleOnBlur(){updateListTitle(newTitle,listId);setOpen(false);};return/*#__PURE__*/React.createElement(\"div\",null,open?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(InputBase,{onChange:handleOnChange,autoFocus:true,value:newTitle,inputProps:{className:classes.input},fullWidth:true,onBlur:handleOnBlur})):/*#__PURE__*/React.createElement(\"div\",{className:classes.editableTitleContainer},/*#__PURE__*/React.createElement(Typography,{onClick:function onClick(){return setOpen(!open);},className:classes.editableTitle},title),/*#__PURE__*/React.createElement(MoreHorizIcon,null)));}","map":{"version":3,"sources":["/Users/ophugo/Downloads/clone_trello/src/components/List/Title.js"],"names":["React","useState","useContext","Typography","InputBase","makeStyles","MoreHorizIcon","storeApi","useStyle","theme","editableTitleContainer","margin","spacing","display","editableTitle","flexGrow","fontSize","fontWeight","input","background","Title","title","listId","open","setOpen","newTitle","setNewTitle","updateListTitle","classes","handleOnChange","e","target","value","handleOnBlur","className"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,mBAAtC,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,8BAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CAEA,GAAMC,CAAAA,QAAQ,CAAGH,UAAU,CAAC,SAACI,KAAD,QAAY,CACtCC,sBAAsB,CAAE,CACtBC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADc,CAEtBC,OAAO,CAAE,MAFa,CADc,CAKtCC,aAAa,CAAE,CACbC,QAAQ,CAAE,CADG,CAEbC,QAAQ,CAAE,QAFG,CAGbC,UAAU,CAAE,MAHC,CALuB,CAUtCC,KAAK,CAAE,CACLF,QAAQ,CAAE,QADL,CAELC,UAAU,CAAE,MAFP,CAGLN,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CAHH,CAIL,UAAW,CACTO,UAAU,CAAE,MADH,CAJN,CAV+B,CAAZ,EAAD,CAA3B,CAmBA,cAAe,SAASC,CAAAA,KAAT,MAAkC,IAAjBC,CAAAA,KAAiB,MAAjBA,KAAiB,CAAVC,MAAU,MAAVA,MAAU,eACvBrB,QAAQ,CAAC,KAAD,CADe,wCACxCsB,IADwC,eAClCC,OADkC,8BAEfvB,QAAQ,CAACoB,KAAD,CAFO,yCAExCI,QAFwC,eAE9BC,WAF8B,+BAGnBxB,UAAU,CAACK,QAAD,CAHS,CAGvCoB,eAHuC,aAGvCA,eAHuC,CAI/C,GAAMC,CAAAA,OAAO,CAAGpB,QAAQ,EAAxB,CACA,GAAMqB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC5BJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,CACD,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBN,eAAe,CAACF,QAAD,CAAWH,MAAX,CAAf,CACAE,OAAO,CAAC,KAAD,CAAP,CACD,CAHD,CAIA,mBACE,+BACGD,IAAI,cACH,4CACE,oBAAC,SAAD,EACE,QAAQ,CAAEM,cADZ,CAEE,SAAS,KAFX,CAGE,KAAK,CAAEJ,QAHT,CAIE,UAAU,CAAE,CACVS,SAAS,CAAEN,OAAO,CAACV,KADT,CAJd,CAOE,SAAS,KAPX,CAQE,MAAM,CAAEe,YARV,EADF,CADG,cAcH,2BAAK,SAAS,CAAEL,OAAO,CAAClB,sBAAxB,eACE,oBAAC,UAAD,EACE,OAAO,CAAE,yBAAMc,CAAAA,OAAO,CAAC,CAACD,IAAF,CAAb,EADX,CAEE,SAAS,CAAEK,OAAO,CAACd,aAFrB,EAIGO,KAJH,CADF,cAOE,oBAAC,aAAD,MAPF,CAfJ,CADF,CA4BD","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Typography, InputBase } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport storeApi from '../../utils/storeApi';\n\nconst useStyle = makeStyles((theme) => ({\n  editableTitleContainer: {\n    margin: theme.spacing(1),\n    display: 'flex',\n  },\n  editableTitle: {\n    flexGrow: 1,\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n  },\n  input: {\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n    margin: theme.spacing(1),\n    '&:focus': {\n      background: '#ddd',\n    },\n  },\n}));\nexport default function Title({ title, listId }) {\n  const [open, setOpen] = useState(false);\n  const [newTitle, setNewTitle] = useState(title);\n  const { updateListTitle } = useContext(storeApi);\n  const classes = useStyle();\n  const handleOnChange = (e) => {\n    setNewTitle(e.target.value);\n  };\n\n  const handleOnBlur = () => {\n    updateListTitle(newTitle, listId);\n    setOpen(false);\n  };\n  return (\n    <div>\n      {open ? (\n        <div>\n          <InputBase\n            onChange={handleOnChange}\n            autoFocus\n            value={newTitle}\n            inputProps={{\n              className: classes.input,\n            }}\n            fullWidth\n            onBlur={handleOnBlur}\n          />\n        </div>\n      ) : (\n        <div className={classes.editableTitleContainer}>\n          <Typography\n            onClick={() => setOpen(!open)}\n            className={classes.editableTitle}\n          >\n            {title}\n          </Typography>\n          <MoreHorizIcon />\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}