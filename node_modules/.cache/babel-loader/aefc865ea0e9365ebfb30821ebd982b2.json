{"ast":null,"code":"import _slicedToArray from\"/Users/ophugo/Downloads/clone_trello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{Paper,InputBase,Button,IconButton}from'@material-ui/core';import ClearIcon from'@material-ui/icons/Clear';import{makeStyles,fade}from'@material-ui/core/styles';import storeApi from'../../utils/storeApi';var useStyle=makeStyles(function(theme){return{card:{width:'280px',margin:theme.spacing(0,1,1,1),paddingBottom:theme.spacing(4)},input:{margin:theme.spacing(1)},btnConfirm:{background:'#5AAC44',color:'#fff','&:hover':{background:fade('#5AAC44',0.75)}},confirm:{margin:theme.spacing(0,1,1,1)}};});export default function InputCard(_ref){var setOpen=_ref.setOpen,listId=_ref.listId,type=_ref.type;var classes=useStyle();var _useContext=useContext(storeApi),addMoreCard=_useContext.addMoreCard,addMoreList=_useContext.addMoreList;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var handleOnChange=function handleOnChange(e){setTitle(e.target.value);};var handleBtnConfirm=function handleBtnConfirm(){if(type==='card'){addMoreCard(title,listId);setTitle('');setOpen(false);}else{addMoreList(title);setTitle('');setOpen(false);}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Paper,{className:classes.card},/*#__PURE__*/React.createElement(InputBase,{onChange:handleOnChange,multiline:true,onBlur:function onBlur(){return setOpen(false);},fullWidth:true,inputProps:{className:classes.input},value:title,placeholder:type==='card'?'Enter a title of this card..':'Enter list title...'}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.confirm},/*#__PURE__*/React.createElement(Button,{className:classes.btnConfirm,onClick:handleBtnConfirm},type==='card'?'Add Card':'Add List'),/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){return setOpen(false);}},/*#__PURE__*/React.createElement(ClearIcon,null))));}","map":{"version":3,"sources":["/Users/ophugo/Downloads/clone_trello/src/components/Input/InputCard.js"],"names":["React","useState","useContext","Paper","InputBase","Button","IconButton","ClearIcon","makeStyles","fade","storeApi","useStyle","theme","card","width","margin","spacing","paddingBottom","input","btnConfirm","background","color","confirm","InputCard","setOpen","listId","type","classes","addMoreCard","addMoreList","title","setTitle","handleOnChange","e","target","value","handleBtnConfirm","className"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Paper, InputBase, Button, IconButton } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { makeStyles, fade } from '@material-ui/core/styles';\nimport storeApi from '../../utils/storeApi';\n\nconst useStyle = makeStyles((theme) => ({\n  card: {\n    width: '280px',\n    margin: theme.spacing(0, 1, 1, 1),\n    paddingBottom: theme.spacing(4),\n  },\n  input: {\n    margin: theme.spacing(1),\n  },\n  btnConfirm: {\n    background: '#5AAC44',\n    color: '#fff',\n    '&:hover': {\n      background: fade('#5AAC44', 0.75),\n    },\n  },\n  confirm: {\n    margin: theme.spacing(0, 1, 1, 1),\n  },\n}));\nexport default function InputCard({ setOpen, listId, type }) {\n  const classes = useStyle();\n  const { addMoreCard, addMoreList } = useContext(storeApi);\n  const [title, setTitle] = useState('');\n\n  const handleOnChange = (e) => {\n    setTitle(e.target.value);\n  };\n  const handleBtnConfirm = () => {\n    if (type === 'card') {\n      addMoreCard(title, listId);\n      setTitle('');\n      setOpen(false);\n    } else {\n      addMoreList(title);\n      setTitle('');\n      setOpen(false);\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <Paper className={classes.card}>\n          <InputBase\n            onChange={handleOnChange}\n            multiline\n            onBlur={() => setOpen(false)}\n            fullWidth\n            inputProps={{\n              className: classes.input,\n            }}\n            value={title}\n            placeholder={\n              type === 'card'\n                ? 'Enter a title of this card..'\n                : 'Enter list title...'\n            }\n          />\n        </Paper>\n      </div>\n      <div className={classes.confirm}>\n        <Button className={classes.btnConfirm} onClick={handleBtnConfirm}>\n          {type === 'card' ? 'Add Card' : 'Add List'}\n        </Button>\n        <IconButton onClick={() => setOpen(false)}>\n          <ClearIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}