{"ast":null,"code":"import _defineProperty from\"/Users/ophugo/Downloads/clone_trello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/ophugo/Downloads/clone_trello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/ophugo/Downloads/clone_trello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/ophugo/Downloads/clone_trello/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{v4 as uuid}from'uuid';import List from'./components/List/List';import store from'./utils/store';import StoreApi from'./utils/storeApi';import InputContainer from'./components/Input/InputContainer';import{makeStyles}from'@material-ui/core/styles';import{DragDropContext,Droppable}from'react-beautiful-dnd';import TopBar from'./components/TopBar';import SideMenu from'./components/SideMenu';var useStyle=makeStyles(function(theme){return{root:{minHeight:'100vh',background:'green',width:'100%',overflowY:'auto'},listContainer:{display:'flex'}};});export default function App(){var _useState=useState(store),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setOpen=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),backgroundUrl=_useState6[0],setBackgroundUrl=_useState6[1];var classes=useStyle();var addMoreCard=function addMoreCard(title,listId){console.log(title,listId);var newCardId=uuid();var newCard={id:newCardId,title:title};var list=data.lists[listId];list.cards=[].concat(_toConsumableArray(list.cards),[newCard]);var newState=_objectSpread({},data,{lists:_objectSpread({},data.lists,_defineProperty({},listId,list))});setData(newState);};var addMoreList=function addMoreList(title){var newListId=uuid();var newList={id:newListId,title:title,cards:[]};var newState={listIds:[].concat(_toConsumableArray(data.listIds),[newListId]),lists:_objectSpread({},data.lists,_defineProperty({},newListId,newList))};setData(newState);};var updateListTitle=function updateListTitle(title,listId){var list=data.lists[listId];list.title=title;var newState=_objectSpread({},data,{lists:_objectSpread({},data.lists,_defineProperty({},listId,list))});setData(newState);};var onDragEnd=function onDragEnd(result){var destination=result.destination,source=result.source,draggableId=result.draggableId,type=result.type;console.log('destination',destination,'source',source,draggableId);if(!destination){return;}if(type==='list'){var newListIds=data.listIds;newListIds.splice(source.index,1);newListIds.splice(destination.index,0,draggableId);return;}var sourceList=data.lists[source.droppableId];var destinationList=data.lists[destination.droppableId];var draggingCard=sourceList.cards.filter(function(card){return card.id===draggableId;})[0];if(source.droppableId===destination.droppableId){sourceList.cards.splice(source.index,1);destinationList.cards.splice(destination.index,0,draggingCard);var newSate=_objectSpread({},data,{lists:_objectSpread({},data.lists,_defineProperty({},sourceList.id,destinationList))});setData(newSate);}else{var _objectSpread6;sourceList.cards.splice(source.index,1);destinationList.cards.splice(destination.index,0,draggingCard);var newState=_objectSpread({},data,{lists:_objectSpread({},data.lists,(_objectSpread6={},_defineProperty(_objectSpread6,sourceList.id,sourceList),_defineProperty(_objectSpread6,destinationList.id,destinationList),_objectSpread6))});setData(newState);}};return/*#__PURE__*/React.createElement(StoreApi.Provider,{value:{addMoreCard:addMoreCard,addMoreList:addMoreList,updateListTitle:updateListTitle}},/*#__PURE__*/React.createElement(\"div\",{className:classes.root,style:{backgroundImage:\"url(\".concat(backgroundUrl,\")\"),backgroundSize:'cover',backgroundRepeat:'no-repeat'}},/*#__PURE__*/React.createElement(TopBar,{setOpen:setOpen}),/*#__PURE__*/React.createElement(DragDropContext,{onDragEnd:onDragEnd},/*#__PURE__*/React.createElement(Droppable,{droppableId:\"app\",type:\"list\",direction:\"horizontal\"},function(provided){return/*#__PURE__*/React.createElement(\"div\",Object.assign({className:classes.listContainer,ref:provided.innerRef},provided.droppableProps),data.listIds.map(function(listId,index){var list=data.lists[listId];return/*#__PURE__*/React.createElement(List,{list:list,key:listId,index:index});}),/*#__PURE__*/React.createElement(InputContainer,{type:\"list\"}),provided.placeholder);})),/*#__PURE__*/React.createElement(SideMenu,{setBackgroundUrl:setBackgroundUrl,open:open,setOpen:setOpen})));}","map":{"version":3,"sources":["/Users/ophugo/Downloads/clone_trello/src/App.js"],"names":["React","useState","v4","uuid","List","store","StoreApi","InputContainer","makeStyles","DragDropContext","Droppable","TopBar","SideMenu","useStyle","theme","root","minHeight","background","width","overflowY","listContainer","display","App","data","setData","open","setOpen","backgroundUrl","setBackgroundUrl","classes","addMoreCard","title","listId","console","log","newCardId","newCard","id","list","lists","cards","newState","addMoreList","newListId","newList","listIds","updateListTitle","onDragEnd","result","destination","source","draggableId","type","newListIds","splice","index","sourceList","droppableId","destinationList","draggingCard","filter","card","newSate","backgroundImage","backgroundSize","backgroundRepeat","provided","innerRef","droppableProps","map","placeholder"],"mappings":"qnBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,EAAE,GAAIC,CAAAA,IAAf,KAA2B,MAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CACA,MAAOC,CAAAA,cAAP,KAA2B,mCAA3B,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,eAAT,CAA0BC,SAA1B,KAA2C,qBAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CAEA,GAAMC,CAAAA,QAAQ,CAAGL,UAAU,CAAC,SAACM,KAAD,QAAY,CACtCC,IAAI,CAAE,CACJC,SAAS,CAAE,OADP,CAEJC,UAAU,CAAE,OAFR,CAGJC,KAAK,CAAE,MAHH,CAIJC,SAAS,CAAE,MAJP,CADgC,CAOtCC,aAAa,CAAE,CACbC,OAAO,CAAE,MADI,CAPuB,CAAZ,EAAD,CAA3B,CAYA,cAAe,SAASC,CAAAA,GAAT,EAAe,eACJrB,QAAQ,CAACI,KAAD,CADJ,wCACrBkB,IADqB,eACfC,OADe,8BAEJvB,QAAQ,CAAC,KAAD,CAFJ,yCAErBwB,IAFqB,eAEfC,OAFe,8BAIczB,QAAQ,CAAC,EAAD,CAJtB,yCAIrB0B,aAJqB,eAINC,gBAJM,eAK5B,GAAMC,CAAAA,OAAO,CAAGhB,QAAQ,EAAxB,CACA,GAAMiB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACrCC,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAAmBC,MAAnB,EAEA,GAAMG,CAAAA,SAAS,CAAGhC,IAAI,EAAtB,CACA,GAAMiC,CAAAA,OAAO,CAAG,CACdC,EAAE,CAAEF,SADU,CAEdJ,KAAK,CAALA,KAFc,CAAhB,CAKA,GAAMO,CAAAA,IAAI,CAAGf,IAAI,CAACgB,KAAL,CAAWP,MAAX,CAAb,CACAM,IAAI,CAACE,KAAL,8BAAiBF,IAAI,CAACE,KAAtB,GAA6BJ,OAA7B,GAEA,GAAMK,CAAAA,QAAQ,kBACTlB,IADS,EAEZgB,KAAK,kBACAhB,IAAI,CAACgB,KADL,oBAEFP,MAFE,CAEOM,IAFP,EAFO,EAAd,CAOAd,OAAO,CAACiB,QAAD,CAAP,CACD,CApBD,CAsBA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACX,KAAD,CAAW,CAC7B,GAAMY,CAAAA,SAAS,CAAGxC,IAAI,EAAtB,CACA,GAAMyC,CAAAA,OAAO,CAAG,CACdP,EAAE,CAAEM,SADU,CAEdZ,KAAK,CAALA,KAFc,CAGdS,KAAK,CAAE,EAHO,CAAhB,CAKA,GAAMC,CAAAA,QAAQ,CAAG,CACfI,OAAO,8BAAMtB,IAAI,CAACsB,OAAX,GAAoBF,SAApB,EADQ,CAEfJ,KAAK,kBACAhB,IAAI,CAACgB,KADL,oBAEFI,SAFE,CAEUC,OAFV,EAFU,CAAjB,CAOApB,OAAO,CAACiB,QAAD,CAAP,CACD,CAfD,CAiBA,GAAMK,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACf,KAAD,CAAQC,MAAR,CAAmB,CACzC,GAAMM,CAAAA,IAAI,CAAGf,IAAI,CAACgB,KAAL,CAAWP,MAAX,CAAb,CACAM,IAAI,CAACP,KAAL,CAAaA,KAAb,CAEA,GAAMU,CAAAA,QAAQ,kBACTlB,IADS,EAEZgB,KAAK,kBACAhB,IAAI,CAACgB,KADL,oBAEFP,MAFE,CAEOM,IAFP,EAFO,EAAd,CAOAd,OAAO,CAACiB,QAAD,CAAP,CACD,CAZD,CAcA,GAAMM,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,CAAY,IACpBC,CAAAA,WADoB,CACuBD,MADvB,CACpBC,WADoB,CACPC,MADO,CACuBF,MADvB,CACPE,MADO,CACCC,WADD,CACuBH,MADvB,CACCG,WADD,CACcC,IADd,CACuBJ,MADvB,CACcI,IADd,CAE5BnB,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA2Be,WAA3B,CAAwC,QAAxC,CAAkDC,MAAlD,CAA0DC,WAA1D,EAEA,GAAI,CAACF,WAAL,CAAkB,CAChB,OACD,CACD,GAAIG,IAAI,GAAK,MAAb,CAAqB,CACnB,GAAMC,CAAAA,UAAU,CAAG9B,IAAI,CAACsB,OAAxB,CACAQ,UAAU,CAACC,MAAX,CAAkBJ,MAAM,CAACK,KAAzB,CAAgC,CAAhC,EACAF,UAAU,CAACC,MAAX,CAAkBL,WAAW,CAACM,KAA9B,CAAqC,CAArC,CAAwCJ,WAAxC,EACA,OACD,CAED,GAAMK,CAAAA,UAAU,CAAGjC,IAAI,CAACgB,KAAL,CAAWW,MAAM,CAACO,WAAlB,CAAnB,CACA,GAAMC,CAAAA,eAAe,CAAGnC,IAAI,CAACgB,KAAL,CAAWU,WAAW,CAACQ,WAAvB,CAAxB,CACA,GAAME,CAAAA,YAAY,CAAGH,UAAU,CAAChB,KAAX,CAAiBoB,MAAjB,CACnB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACxB,EAAL,GAAYc,WAAtB,EADmB,EAEnB,CAFmB,CAArB,CAIA,GAAID,MAAM,CAACO,WAAP,GAAuBR,WAAW,CAACQ,WAAvC,CAAoD,CAClDD,UAAU,CAAChB,KAAX,CAAiBc,MAAjB,CAAwBJ,MAAM,CAACK,KAA/B,CAAsC,CAAtC,EACAG,eAAe,CAAClB,KAAhB,CAAsBc,MAAtB,CAA6BL,WAAW,CAACM,KAAzC,CAAgD,CAAhD,CAAmDI,YAAnD,EACA,GAAMG,CAAAA,OAAO,kBACRvC,IADQ,EAEXgB,KAAK,kBACAhB,IAAI,CAACgB,KADL,oBAEFiB,UAAU,CAACnB,EAFT,CAEcqB,eAFd,EAFM,EAAb,CAOAlC,OAAO,CAACsC,OAAD,CAAP,CACD,CAXD,IAWO,oBACLN,UAAU,CAAChB,KAAX,CAAiBc,MAAjB,CAAwBJ,MAAM,CAACK,KAA/B,CAAsC,CAAtC,EACAG,eAAe,CAAClB,KAAhB,CAAsBc,MAAtB,CAA6BL,WAAW,CAACM,KAAzC,CAAgD,CAAhD,CAAmDI,YAAnD,EAEA,GAAMlB,CAAAA,QAAQ,kBACTlB,IADS,EAEZgB,KAAK,kBACAhB,IAAI,CAACgB,KADL,mDAEFiB,UAAU,CAACnB,EAFT,CAEcmB,UAFd,iCAGFE,eAAe,CAACrB,EAHd,CAGmBqB,eAHnB,kBAFO,EAAd,CAQAlC,OAAO,CAACiB,QAAD,CAAP,CACD,CACF,CA7CD,CA+CA,mBACE,oBAAC,QAAD,CAAU,QAAV,EAAmB,KAAK,CAAE,CAAEX,WAAW,CAAXA,WAAF,CAAeY,WAAW,CAAXA,WAAf,CAA4BI,eAAe,CAAfA,eAA5B,CAA1B,eACE,2BACE,SAAS,CAAEjB,OAAO,CAACd,IADrB,CAEE,KAAK,CAAE,CACLgD,eAAe,eAASpC,aAAT,KADV,CAELqC,cAAc,CAAE,OAFX,CAGLC,gBAAgB,CAAE,WAHb,CAFT,eAQE,oBAAC,MAAD,EAAQ,OAAO,CAAEvC,OAAjB,EARF,cAUE,oBAAC,eAAD,EAAiB,SAAS,CAAEqB,SAA5B,eACE,oBAAC,SAAD,EAAW,WAAW,CAAC,KAAvB,CAA6B,IAAI,CAAC,MAAlC,CAAyC,SAAS,CAAC,YAAnD,EACG,SAACmB,QAAD,qBACC,yCACE,SAAS,CAAErC,OAAO,CAACT,aADrB,CAEE,GAAG,CAAE8C,QAAQ,CAACC,QAFhB,EAGMD,QAAQ,CAACE,cAHf,EAKG7C,IAAI,CAACsB,OAAL,CAAawB,GAAb,CAAiB,SAACrC,MAAD,CAASuB,KAAT,CAAmB,CACnC,GAAMjB,CAAAA,IAAI,CAAGf,IAAI,CAACgB,KAAL,CAAWP,MAAX,CAAb,CACA,mBAAO,oBAAC,IAAD,EAAM,IAAI,CAAEM,IAAZ,CAAkB,GAAG,CAAEN,MAAvB,CAA+B,KAAK,CAAEuB,KAAtC,EAAP,CACD,CAHA,CALH,cASE,oBAAC,cAAD,EAAgB,IAAI,CAAC,MAArB,EATF,CAUGW,QAAQ,CAACI,WAVZ,CADD,EADH,CADF,CAVF,cA4BE,oBAAC,QAAD,EACE,gBAAgB,CAAE1C,gBADpB,CAEE,IAAI,CAAEH,IAFR,CAGE,OAAO,CAAEC,OAHX,EA5BF,CADF,CADF,CAsCD","sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport List from './components/List/List';\nimport store from './utils/store';\nimport StoreApi from './utils/storeApi';\nimport InputContainer from './components/Input/InputContainer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport TopBar from './components/TopBar';\nimport SideMenu from './components/SideMenu';\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    minHeight: '100vh',\n    background: 'green',\n    width: '100%',\n    overflowY: 'auto',\n  },\n  listContainer: {\n    display: 'flex',\n  },\n}));\n\nexport default function App() {\n  const [data, setData] = useState(store);\n  const [open, setOpen] = useState(false);\n\n  const [backgroundUrl, setBackgroundUrl] = useState('');\n  const classes = useStyle();\n  const addMoreCard = (title, listId) => {\n    console.log(title, listId);\n\n    const newCardId = uuid();\n    const newCard = {\n      id: newCardId,\n      title,\n    };\n\n    const list = data.lists[listId];\n    list.cards = [...list.cards, newCard];\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n\n  const addMoreList = (title) => {\n    const newListId = uuid();\n    const newList = {\n      id: newListId,\n      title,\n      cards: [],\n    };\n    const newState = {\n      listIds: [...data.listIds, newListId],\n      lists: {\n        ...data.lists,\n        [newListId]: newList,\n      },\n    };\n    setData(newState);\n  };\n\n  const updateListTitle = (title, listId) => {\n    const list = data.lists[listId];\n    list.title = title;\n\n    const newState = {\n      ...data,\n      lists: {\n        ...data.lists,\n        [listId]: list,\n      },\n    };\n    setData(newState);\n  };\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n    console.log('destination', destination, 'source', source, draggableId);\n\n    if (!destination) {\n      return;\n    }\n    if (type === 'list') {\n      const newListIds = data.listIds;\n      newListIds.splice(source.index, 1);\n      newListIds.splice(destination.index, 0, draggableId);\n      return;\n    }\n\n    const sourceList = data.lists[source.droppableId];\n    const destinationList = data.lists[destination.droppableId];\n    const draggingCard = sourceList.cards.filter(\n      (card) => card.id === draggableId\n    )[0];\n\n    if (source.droppableId === destination.droppableId) {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n      const newSate = {\n        ...data,\n        lists: {\n          ...data.lists,\n          [sourceList.id]: destinationList,\n        },\n      };\n      setData(newSate);\n    } else {\n      sourceList.cards.splice(source.index, 1);\n      destinationList.cards.splice(destination.index, 0, draggingCard);\n\n      const newState = {\n        ...data,\n        lists: {\n          ...data.lists,\n          [sourceList.id]: sourceList,\n          [destinationList.id]: destinationList,\n        },\n      };\n      setData(newState);\n    }\n  };\n\n  return (\n    <StoreApi.Provider value={{ addMoreCard, addMoreList, updateListTitle }}>\n      <div\n        className={classes.root}\n        style={{\n          backgroundImage: `url(${backgroundUrl})`,\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n        }}\n      >\n        <TopBar setOpen={setOpen} />\n\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"app\" type=\"list\" direction=\"horizontal\">\n            {(provided) => (\n              <div\n                className={classes.listContainer}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n              >\n                {data.listIds.map((listId, index) => {\n                  const list = data.lists[listId];\n                  return <List list={list} key={listId} index={index} />;\n                })}\n                <InputContainer type=\"list\" />\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        <SideMenu\n          setBackgroundUrl={setBackgroundUrl}\n          open={open}\n          setOpen={setOpen}\n        />\n      </div>\n    </StoreApi.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}